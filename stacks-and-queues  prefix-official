https://www.pepcoding.com/resources/online-java-foundation/stacks-and-queues/prefix-official/ojquestion

import java.io.*;
import java.util.*;

public class Main{
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String exp = br.readLine();

    // code
    Stack<Integer> evaluate = new Stack<>();
    Stack<String> infix= new Stack<>();
    Stack<String> postfix= new Stack<>();
    
    
    //wrong approach
    // int idx=0;
    // for(int i=0;i<exp.length();i++){
    //     char ch= exp.charAt(i);
    //     if(!Character.isDigit(ch)){
    //         operator.push(ch);
    //         idx=i;
    //     }
    // }
    
    // for(int i=0;i<=idx+2){
    //     char ch=exp.charAt(i);
    //     if(Character.isDigit(ch)){
    //         evaluate.push(ch-'0');
    //     }
    // }
    
    // //first operation
    // int v2=evaluate.pop();
    // int v1=evaluate.pop();
    // char op=operator.pop();
    // int res= operation(v1,v2,op);
    // evaluate.push(res);
    
    // //baki operation
    // for(int i=idx+2;i<exp.length();i++){
        
    // }
    
    //piche se dalenge
    for(int i=exp.length()-1;i>=0;i--){
        char ch= exp.charAt(i);
        if(!Character.isDigit(ch)){
            //evaluate
            int v1=evaluate.pop();
            int v2=evaluate.pop();
            int res=operation(v1,v2,ch);
            evaluate.push(res);
            
            //infix
            String infs1=infix.pop();
            String infs2=infix.pop();
            String res1='('+infs1+ch+infs2+')';
            infix.push(res1);
            
            //postfix
            String posts1=postfix.pop();
            String posts2=postfix.pop();
            String res2=posts1+posts2+ch;
            postfix.push(res2);
            
        }else {
            evaluate.push(ch-'0');
            infix.push(ch+"");
            postfix.push(ch+"");
        }
    }
    
    System.out.println(evaluate.peek());
    System.out.println(infix.peek());
    System.out.println(postfix.peek());
    
 }
 
 public static int operation(int v1,int v2,char ch){
     if(ch=='-'){
         return v1-v2;
     }else if(ch=='*'){
         return v1*v2;
     }else if(ch=='/'){
         return v1/v2;
     }else if(ch=='+'){
         return v1+v2;
     }
     return 0;
     
 }
}
 
